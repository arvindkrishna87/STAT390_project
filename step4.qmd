---
title: "Step 4: Patching"
editor: 
  markdown: 
    wrap: 72
--- 


**Aim: Applies horizontal/vertical patching across the matched and
oriented epithelia.**

![](images/Step4.png){fig-align="center"}

## Pathologist Team Step

Before this step, we will send matched and extracted epithelium slices
to the pathologist team to annotate the regions.

![](images/Annotations.png){fig-align="center"}

Once this step is complete, we can begin patching.

# Methodology


The **rotation patching code** processes stained tissue images by aligning them spatially, segmenting key regions (epithelium and stroma), and extracting patches for comparative analysis across different stains (H&E, Melan-A, and Sox-10). It begins by aligning images through contour detection, cropping, and optimizing overlap between stains. Using adaptive thresholding and morphological operations, the script segments epithelium and stroma regions based on luminance and chroma channels in the YCrCb color space. Patches containing both regions are extracted along the skeletonized centerline, validated across stains, and saved for further analysis, enabling consistent and meaningful cross-stain comparisons.


Follow this step-by-step manual to patch the epithelia.

:::{.callout-note collapse=true}

## Step-by-Step Manual

Code required:

- rotate_extract_patch (1).py

Run `rotate_extract_patch (1).py`.

:::

# Results

**Orientation**

![](images/Orient.png){fig-align="center"}

![](images/Step4.png){fig-align="center"}

## Comparing Approaches

### Alyssa's Code

| Pros              | Cons              |
|------------------|-----------------|
| - Patches grow until they cover a sufficient region of the epithelium, which allows for better adaptability across different epithelium widths <br>- Advantage 2 | - Incrementally increases patches using very small step sizes, making her code time consuming<br>- Disadvantage 2 |

### Aryaman's Code

| Pros              | Cons              |
|------------------|-----------------|
| - Advantage 1<br>- Advantage 2 | - Disadvantage 1<br>- Disadvantage 2 |

### Eli's Code

| Pros              | Cons              |
|------------------|-----------------|
| - Advantage 1<br>- Advantage 2 | - Disadvantage 1<br>- Disadvantage 2 |


## Tilting the patches

Tilting of patches could lead to smaller, more efficient patches. Smaller patches are advantageous because we will get more data to work with. Each patch will also have less data in it, and our model may have an easier time picking up on patterns. Also, tilting the patches, means that the epithelium is always in the same orientation in each patch. Our model will not have to determine the orientation of a sample. Perhaps, this will lead to a simpler, more efficient model. 

### Aryaman’s algorithm

We use edge detection and find the slope between two points on the edge. Using that slope, we create one edge of the square. This way, the square is tilted to match up with the angle of the sample. \n
<br>
**Upsides:** There is already code for that edge detection and finding the edge of the square. \n
<br>
**Downsides:** The samples are very irregular, so, when the edge is extended, a patch could cut off a lot of epithelium. That cut off epithelium could then be picked up by other patches, but there might be inefficiency in the patching this way. Also, see downsides of Aryaman’s whole algorithm. 

### Different tilting algorithm: 

We pick a random patch. Next, we identify the stroma and the outside of the sample. We treat the pixels of the stroma and the outside of the sample as points. Using these points, we run a regression model to draw the line that most efficiently crosses the epithelium. Now, we will tilt the patch so that two edges are perpendicular and two edges are parallel to that regression line. This will create a patch that follows the contour of the epithelium. Below is a visual representation of this process.

![](images/regression_tilt.png){fig-align="center" width=70%}

**Upsides:** this method is not very computationally expensive, especially with the epithelium mask that we have for each sample already. \n
<br>
**Downsides:** When tilting an existing patch, we cannot ensure that the patch still includes the entire epithelium unless we also resize the patch. \n
<br>
**Note:** This separates the tilting from the patching process. While this is not necessarily a negative, we don’t know which patching algorithm works best with this method yet. It adds another step to the process.





