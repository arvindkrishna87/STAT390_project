---
title: "Step 2: Matching slices across stains"
---

**Aim: To identify and match structurally similar slices across stains for each patient.**

![](images/Step2.png){fig-align="center"}


# **Methodology**

This pipeline automates the preprocessing, matching, alignment, and patch extraction of stained tissue images to enable efficient downstream analysis. The process begins with the preprocessing phase, where images are standardized and organized. Files are renamed to a consistent format, and patients missing one or more strain types (H&E, melan, SOX10) are excluded. For patients with multiple images of the same strain, only the highest-resolution image is retained. Once cleaned, images are split into folders by patient ID to prepare for further analysis.

The matching phase groups corresponding images across the three stains for each patient by calculating distances between extracted contours to find optimal matches. The aligned images are saved as "matches" and further processed during the alignment phase, where images are rotated and resized to maximize overlap while maintaining consistent dimensions. A contour-based algorithm crops images to their regions of interest before alignment.

Finally, the patch extraction phase identifies and extracts tissue patches containing both epithelium and stroma using skeletonization and gradient-based methods. Each patch is validated to ensure it contains components from all three stain types and meets quality criteria, such as having a balanced proportion of tissue and background pixels. Patches are saved in an organized structure, enabling seamless comparison across stains. The pipeline integrates error handling and modular design to ensure robustness, scalability, and adaptability to varied datasets.

Follow this step-by-step manual to match slices:

:::{.callout-note collapse=true}

## Step-by-Step Manual

Two codes required:

-   `Team4Matching.ipynb`

-   `match_pipeline-2.py`

Follow these steps to use the pipeline to generate matching slices for all patients or a specific subset:

**1. Prepare Image Data:** Place .tif image files in the designated folder (e.g., processed_images). Ensure that each patient has images for all three stains (H&E, Melanin, Sox10).

**2. Choose Full or Subset Processing:**

For All Patients: Place all images in the same `processed_images` directory.

For a Subset of Patients: Separate patient image files into their own folders within processed_images (e.g., `processed_images/patient1`, `processed_images/patient2`). Run the Pipeline.

**3. Run `match_pipeline.py`.** A GUI will prompt you to select the directory containing the images. Open **`NoahsMatching.ipynb`** in Jupyter Notebook and execute cells in sequence. Process and Review Matches: Upon execution, the pipeline will preprocess, extract contours, and match images, saving results in the matches folder. Images will be organized by patient, with matched slices grouped in subfolders.

:::

# Results

**Example:**

All tissue slices from patient h2114153:

![](images/step%202%20images/slice1.png){width="125"} ![](images/step%202%20images//slice4.png){width="90"} ![](images/step%202%20images//slice5.png){width="106"} ![](images/step%202%20images//slice6.png){width="105"} ![](images/step%202%20images//slice2.png){width="121"} ![](images/step%202%20images//slice7.png){width="100"} ![](images/step%202%20images//slice3.png){width="113"}

**Successfully matched results**

![](images/step%202%20images//slice1.png){width="125"} ![](images/step%202%20images//slice2.png){width="121"} ![](images/step%202%20images//slice3.png){width="113"}

![](images/Step2.png){fig-align="center"}

# API

Here is the API we created to automate this step. Using this tool will speed up the process a great deal:

![](images/API.png){fig-align="center"}


